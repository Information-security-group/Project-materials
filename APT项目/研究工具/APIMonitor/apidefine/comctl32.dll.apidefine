function CreateMappedBitmap(Instance: THandle; Bitmap: Integer;Flags: UINT; ColorMap: PColorMap; NumMaps: Integer): HBitmap; stdcall;
function CreatePropertySheetPageA(var PSP: TPropSheetPageA): HPropSheetPage; stdcall;
function CreatePropertySheetPageW(var PSP: TPropSheetPageW): HPropSheetPage; stdcall;
function CreateStatusWindowA(Style: Longint; lpszText: PAnsiChar;hwndParent: HWND; wID: UINT): HWND; stdcall;
function CreateStatusWindowW(Style: Longint; lpszText: PWideChar;hwndParent: HWND; wID: UINT): HWND; stdcall;
function CreateToolBarEx(Wnd: HWnd; ws: Longint; ID: UINT;Bitmaps: Integer; BMInst: THandle; BMID: Cardinal; Buttons: PTBButton;NumButtons: Integer; dxButton, dyButton: Integer;dxBitmap, dyBitmap: Integer; StructSize: UINT): HWnd; stdcall;
function CreateUpDownControl(dwStyle: Longint; X, Y, CX, CY: Integer;hParent: HWND;  nID: Integer; hInst: THandle; hBuddy: HWND;nUpper, nLower, nPos: Integer): HWND; stdcall;
function DestroyPropertySheetPage(hPSP: HPropSheetPage): BOOL; stdcall;
procedure DrawInsert(hwndParent: HWND; hLB: HWND; nItem: Integer); stdcall;
procedure DrawStatusTextA(hDC: HDC; lprc: PRect; pzsText: PAnsiChar;uFlags: UINT); stdcall;
procedure DrawStatusTextW(hDC: HDC; lprc: PRect; pzsText: PWideChar;uFlags: UINT); stdcall;
function FlatSB_EnableScrollBar(hWnd: HWND; wSBflags, wArrows: UINT): BOOL; stdcall;
function FlatSB_GetScrollInfo(hWnd: HWND; BarFlag: Integer;var ScrollInfo: TScrollInfo): BOOL; stdcall;
function FlatSB_GetScrollPos(hWnd: HWND; nBar: Integer): Integer; stdcall;
function FlatSB_GetScrollProp(p1: HWND; propIndex: Integer;p3: PInteger): Bool; stdcall;
function FlatSB_GetScrollRange(hWnd: HWND; nBar: Integer; var lpMinPos,lpMaxPos: Integer): BOOL; stdcall;
function FlatSB_SetScrollInfo(hWnd: HWND; BarFlag: Integer;const ScrollInfo: TScrollInfo; Redraw: BOOL): Integer; stdcall;
function FlatSB_SetScrollPos(hWnd: HWND; nBar, nPos: Integer;bRedraw: BOOL): Integer; stdcall;
function FlatSB_SetScrollProp(p1: HWND; index: Integer; newValue: Integer;p4: Bool): Bool; stdcall;
function FlatSB_SetScrollRange(hWnd: HWND; nBar, nMinPos, nMaxPos: Integer;bRedraw: BOOL): BOOL; stdcall;
function FlatSB_ShowScrollBar(hWnd: HWND; wBar: Integer; bShow: BOOL): BOOL; stdcall;
procedure GetEffectiveClientRect(hWnd: HWND; lprc: PRect; lpInfo: PINT); stdcall;
function ImageList_Add(ImageList: HIMAGELIST; Image, Mask: HBitmap): Integer; stdcall;
function ImageList_AddMasked(ImageList: HIMAGELIST; Image: HBitmap;Mask: TColorRef): Integer; stdcall;
function ImageList_BeginDrag(ImageList: HIMAGELIST; Track: Integer;XHotSpot, YHotSpot: Integer): Bool; stdcall;
function ImageList_Copy(himlDst: HIMAGELIST; iDst: Integer; himlSrc: HIMAGELIST;Src: Integer; uFlags: UINT): Integer; stdcall;
function ImageList_Create(CX, CY: Integer; Flags: UINT;Initial, Grow: Integer): HIMAGELIST; stdcall;
function ImageList_Destroy(ImageList: HIMAGELIST): Bool; stdcall;
function ImageList_DragEnter(LockWnd: HWnd; X, Y: Integer): Bool; stdcall;
function ImageList_DragLeave(LockWnd: HWnd): Bool; stdcall;
function ImageList_DragMove(X, Y: Integer): Bool; stdcall;
function ImageList_DragShowNolock(Show: Bool): Bool; stdcall;
function ImageList_Draw(ImageList: HIMAGELIST; Index: Integer;Dest: HDC; X, Y: Integer; Style: UINT): Bool; stdcall;
function ImageList_DrawEx(ImageList: HIMAGELIST; Index: Integer;Dest: HDC; X, Y, DX, DY: Integer; Bk, Fg: TColorRef; Style: Cardinal): Bool; stdcall;
function ImageList_DrawIndirect(pimldp: PImageListDrawParams): Integer; stdcall;
function ImageList_Duplicate(himl: HIMAGELIST): HIMAGELIST; stdcall;
function ImageList_EndDrag: Bool; stdcall;
function ImageList_GetBkColor(ImageList: HIMAGELIST): TColorRef; stdcall;
function ImageList_GetDragImage(Point, HotSpot: PPoint): HIMAGELIST; stdcall;
function ImageList_GetIcon(ImageList: HIMAGELIST; Index: Integer;Flags: Cardinal): HIcon; stdcall;
function ImageList_GetIconSize(ImageList: HIMAGELIST; var CX, CY: Integer): Bool; stdcall;
function ImageList_GetImageCount(ImageList: HIMAGELIST): Integer; stdcall;
function ImageList_GetImageInfo(ImageList: HIMAGELIST; Index: Integer;var ImageInfo: TImageInfo): Bool; stdcall;
function ImageList_LoadImageA(Instance: THandle; Bmp: PAnsiChar; CX, Grow: Integer;Mask: TColorRef; pType, Flags: Cardinal): HIMAGELIST; stdcall;
function ImageList_LoadImageW(Instance: THandle; Bmp: PWideChar; CX, Grow: Integer;Mask: TColorRef; pType, Flags: Cardinal): HIMAGELIST; stdcall;
function ImageList_Merge(ImageList1: HIMAGELIST; Index1: Integer;ImageList2: HIMAGELIST; Index2: Integer; DX, DY: Integer): HIMAGELIST; stdcall;
function ImageList_Read(Stream: IStream): HIMAGELIST; stdcall;
function ImageList_Remove(ImageList: HIMAGELIST; Index: Integer): Bool; stdcall;
function ImageList_Replace(ImageList: HIMAGELIST; Index: Integer;Image, Mask: HBitmap): Bool; stdcall;
function ImageList_ReplaceIcon(ImageList: HIMAGELIST; Index: Integer;Icon: HIcon): Integer; stdcall;
function ImageList_SetBkColor(ImageList: HIMAGELIST; ClrBk: TColorRef): TColorRef; stdcall;
function ImageList_SetDragCursorImage(ImageList: HIMAGELIST; Drag: Integer;XHotSpot, YHotSpot: Integer): Bool; stdcall;
function ImageList_SetIconSize(ImageList: HIMAGELIST; CX, CY: Integer): Bool; stdcall;
function ImageList_SetImageCount(himl: HIMAGELIST; uNewCount: UINT): Integer; stdcall;
function ImageList_SetOverlayImage(ImageList: HIMAGELIST; Image: Integer;Overlay: Integer): Bool; stdcall;
function ImageList_Write(ImageList: HIMAGELIST; Stream: IStream): BOOL; stdcall;
procedure InitCommonControls; stdcall;
function InitializeFlatSB(hWnd: HWND): Bool; stdcall;
function LBItemFromPt(hLB: HWND; pt: TPoint; bAutoScroll: Bool): Integer; stdcall;
procedure MakeDragList(hLB: HWND); stdcall;
procedure MenuHelp(Msg: UINT; wParam: WPARAM; lParam: LPARAM;hMainMenu: HMENU; hInst: THandle; hwndStatus: HWND; lpwIDs: PUINT); stdcall;
function PropertySheetA(var PSH: TPropSheetHeaderA): Integer; stdcall;
function PropertySheetW(var PSH: TPropSheetHeaderW): Integer; stdcall;
function ShowHideMenuCtl(hWnd: HWND; uFlags: UINT; lpInfo: PINT): Bool; stdcall;
procedure UninitializeFlatSB(hWnd: HWND); stdcall;implementationconst{$IFDEF MSWINDOWS}cctrl = 'comctl32.dll'; { From Windows.pas }{$ENDIF}{$IFDEF LINUX}cctrl = 'libcomctl32.borland.so';{$ENDIF}varComCtl32DLL: THandle;_InitCommonControlsEx: function(var ICC: TInitCommonControlsEx): Bool stdcall;
function _TrackMouseEvent(lpEventTrack: PTrackMouseEvent): BOOL; stdcall;

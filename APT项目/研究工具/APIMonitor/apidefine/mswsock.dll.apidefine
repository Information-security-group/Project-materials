function AcceptEx(sListenSocket, sAcceptSocket: TSocket; lpOutputBuffer: LPVOID;dwReceiveDataLength, dwLocalAddressLength, dwRemoteAddressLength: DWORD;var lpdwBytesReceived: DWORD; lpOverlapped: POVERLAPPED): BOOL; stdcall;
procedure GetAcceptExSockaddrs(lpOutputBuffer: LPVOID; dwReceiveDataLength,dwLocalAddressLength, dwRemoteAddressLength: DWORD; var LocalSockaddr: LPSOCKADDR;var LocalSockaddrLength: Integer; var RemoteSockaddr: LPSOCKADDR;var RemoteSockaddrLength: Integer); stdcall;{$EXTERNALSYM GetAcceptExSockaddrs}//// "QueryInterface" versions of the above APIs.//typeLPFN_TRANSMITFILE = function(hSocket: TSocket; hFile: HANDLE; nNumberOfBytesToWrite,nNumberOfBytesPerSend: DWORD; lpOverlapped: POVERLAPPED;lpTransmitBuffers: LPTRANSMIT_FILE_BUFFERS; dwReserved: DWORD): BOOL; stdcall;
function TransmitFile(hSocket: TSocket; hFile: HANDLE; nNumberOfBytesToWrite,nNumberOfBytesPerSend: DWORD; lpOverlapped: POVERLAPPED;lpTransmitBuffers: LPTRANSMIT_FILE_BUFFERS; dwReserved: DWORD): BOOL; stdcall;
function WSARecvEx(s: TSocket; buf: PChar; len: Integer; var flags: Integer): Integer; stdcall;

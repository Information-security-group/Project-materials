function AssocCreate(clsid: TCLSID; riid: TREFIID; ppv: Pointer): HRESULT; stdcall;
function AssocQueryKeyA(flags: ASSOCF; key: ASSOCKEY; pszAssoc, pszExtra: PAnsiChar;out phkeyOut: HKEY): HRESULT; stdcall;
function AssocQueryKeyW(flags: ASSOCF; key: ASSOCKEY; pszAssoc, pszExtra: PWideChar;out phkeyOut: HKEY): HRESULT; stdcall;
function AssocQueryStringA(flags: ASSOCF; str: ASSOCSTR; pszAssoc, pszExtra: PAnsiChar;pszOut: PAnsiChar; pcchOut: PDWORD): HRESULT; stdcall;
function AssocQueryStringByKeyA(flags: ASSOCF; str: ASSOCSTR; hkAssoc: HKEY;pszExtra: PAnsiChar; pszOut: PAnsiChar; pcchOut: PDWORD): HRESULT; stdcall;
function AssocQueryStringByKeyW(flags: ASSOCF; str: ASSOCSTR; hkAssoc: HKEY;pszExtra: PWideChar; pszOut: PWideChar; pcchOut: PDWORD): HRESULT; stdcall;
function AssocQueryStringW(flags: ASSOCF; str: ASSOCSTR; pszAssoc, pszExtra: PWideChar;pszOut: PWideChar; pcchOut: PDWORD): HRESULT; stdcall;
function ColorAdjustLuma(clrRGB: TColorRef; n: Integer; fScale: Boolean): TColorRef; stdcall;
function ColorHLSToRGB(wHue, wLuminance, wSaturation: WORD): TColorRef; stdcall;
procedure ColorRGBToHLS(clrRGB: TColorRef; out pwHue, pwLuminance, pwSaturation: WORD); stdcall;
function HashData(pbData: PBYTE; cbData: DWORD; pbHash: PBYTE; cbHash: DWORD): HRESULT; stdcall;
function IntlStrEqWorkerA(fCaseSens: BOOL; lpString1, lpString2: PAnsiChar; nChar: Integer): BOOL; stdcall;
function IntlStrEqWorkerW(fCaseSens: BOOL; lpString1, lpString2: PWideChar; nChar: Integer): BOOL; stdcall;
function PathAddBackslashA(pszPath: PAnsiChar): PAnsiChar; stdcall;
function PathAddBackslashW(pszPath: PWideChar): PWideChar; stdcall;
function PathAddExtensionA(pszPath: PAnsiChar; pszExt: PAnsiChar): BOOL; stdcall;
function PathAddExtensionW(pszPath: PWideChar; pszExt: PWideChar): BOOL; stdcall;
function PathAppendA(pszPath: PAnsiChar; pMore: PAnsiChar): BOOL; stdcall;
function PathAppendW(pszPath: PWideChar; pMore: PWideChar): BOOL; stdcall;
function PathBuildRootA(szRoot: PAnsiChar; iDrive: Integer): PAnsiChar; stdcall;
function PathBuildRootW(szRoot: PWideChar; iDrive: Integer): PWideChar; stdcall;
function PathCanonicalizeA(pszBuf: PAnsiChar; pszPath: PAnsiChar): BOOL; stdcall;
function PathCanonicalizeW(pszBuf: PWideChar; pszPath: PWideChar): BOOL; stdcall;
function PathCombineA(szDest: PAnsiChar; lpszDir, lpszFile: PAnsiChar): PAnsiChar; stdcall;
function PathCombineW(szDest: PWideChar; lpszDir, lpszFile: PWideChar): PWideChar; stdcall;
function PathCommonPrefixA(pszFile1, pszFile2: PAnsiChar; achPath: PAnsiChar): Integer; stdcall;
function PathCommonPrefixW(pszFile1, pszFile2: PWideChar; achPath: PWideChar): Integer; stdcall;
function PathCompactPathA(hDC: HDC; pszPath: PAnsiChar; dx: UINT): BOOL; stdcall;
function PathCompactPathExA(pszOut: PAnsiChar; pszSrc: PAnsiChar; cchMax: UINT; dwFlags: DWORD): BOOL; stdcall;
function PathCompactPathExW(pszOut: PWideChar; pszSrc: PWideChar; cchMax: UINT; dwFlags: DWORD): BOOL; stdcall;
function PathCompactPathW(hDC: HDC; pszPath: PWideChar; dx: UINT): BOOL; stdcall;
function PathCreateFromUrlA(pszUrl: PAnsiChar; pszPath: PAnsiChar; pcchPath: LPDWORD;dwFlags: DWORD): HRESULT; stdcall;
function PathCreateFromUrlW(pszUrl: PWideChar; pszPath: PWideChar; pcchPath: LPDWORD;dwFlags: DWORD): HRESULT; stdcall;
function PathFileExistsA(pszPath: PAnsiChar): BOOL; stdcall;
function PathFileExistsW(pszPath: PWideChar): BOOL; stdcall;
function PathFindExtensionA(pszPath: PAnsiChar): PAnsiChar; stdcall;
function PathFindExtensionW(pszPath: PWideChar): PWideChar; stdcall;
function PathFindFileNameA(pszPath: PAnsiChar): PAnsiChar; stdcall;
function PathFindFileNameW(pszPath: PWideChar): PWideChar; stdcall;
function PathFindNextComponentA(pszPath: PAnsiChar): PAnsiChar; stdcall;
function PathFindNextComponentW(pszPath: PWideChar): PWideChar; stdcall;
function PathFindOnPathA(pszPath: PAnsiChar; var ppszOtherDirs: PAnsiChar): BOOL; stdcall;
function PathFindOnPathW(pszPath: PWideChar; var ppszOtherDirs: PWideChar): BOOL; stdcall;
function PathFindSuffixArrayA(pszPath: PAnsiChar; const apszSuffix: PAnsiChar;iArraySize: Integer): PAnsiChar; stdcall;
function PathFindSuffixArrayW(pszPath: PWideChar; const apszSuffix: PWideChar;iArraySize: Integer): PWideChar; stdcall;
function PathGetArgsA(pszPath: PAnsiChar): PAnsiChar; stdcall;
function PathGetArgsW(pszPath: PWideChar): PWideChar; stdcall;
function PathGetCharTypeA(ch: AnsiChar): UINT; stdcall;
function PathGetCharTypeW(ch: WideChar): UINT; stdcall;
function PathGetDriveNumberA(pszPath: PAnsiChar): Integer; stdcall;
function PathGetDriveNumberW(pszPath: PWideChar): Integer; stdcall;
function PathIsContentTypeA(pszPath, pszContentType: PAnsiChar): BOOL; stdcall;
function PathIsContentTypeW(pszPath, pszContentType: PWideChar): BOOL; stdcall;
function PathIsDirectoryA(pszPath: PAnsiChar): BOOL; stdcall;
function PathIsDirectoryEmptyA(pszPath: PAnsiChar): BOOL; stdcall;
function PathIsDirectoryEmptyW(pszPath: PWideChar): BOOL; stdcall;
function PathIsDirectoryW(pszPath: PWideChar): BOOL; stdcall;
function PathIsFileSpecA(pszPath: PAnsiChar): BOOL; stdcall;
function PathIsFileSpecW(pszPath: PWideChar): BOOL; stdcall;
function PathIsLFNFileSpecA(lpName: PAnsiChar): BOOL; stdcall;
function PathIsLFNFileSpecW(lpName: PWideChar): BOOL; stdcall;
function PathIsNetworkPathA(pszPath: PAnsiChar): BOOL; stdcall;
function PathIsNetworkPathW(pszPath: PWideChar): BOOL; stdcall;
function PathIsPrefixA(pszPrefix, pszPath: PAnsiChar): BOOL; stdcall;
function PathIsPrefixW(pszPrefix, pszPath: PWideChar): BOOL; stdcall;
function PathIsRelativeA(pszPath: PAnsiChar): BOOL; stdcall;
function PathIsRelativeW(pszPath: PWideChar): BOOL; stdcall;
function PathIsRootA(pszPath: PAnsiChar): BOOL; stdcall;
function PathIsRootW(pszPath: PWideChar): BOOL; stdcall;
function PathIsSameRootA(pszPath1, pszPath2: PAnsiChar): BOOL; stdcall;
function PathIsSameRootW(pszPath1, pszPath2: PWideChar): BOOL; stdcall;
function PathIsSystemFolderA(pszPath: PAnsiChar; dwAttrb: DWORD): BOOL; stdcall;
function PathIsSystemFolderW(pszPath: PWideChar; dwAttrb: DWORD): BOOL; stdcall;
function PathIsUNCA(pszPath: PAnsiChar): BOOL; stdcall;
function PathIsUNCServerA(pszPath: PAnsiChar): BOOL; stdcall;
function PathIsUNCServerShareA(pszPath: PAnsiChar): BOOL; stdcall;
function PathIsUNCServerShareW(pszPath: PWideChar): BOOL; stdcall;
function PathIsUNCServerW(pszPath: PWideChar): BOOL; stdcall;
function PathIsUNCW(pszPath: PWideChar): BOOL; stdcall;
function PathIsURLA(pszPath: PAnsiChar): BOOL; stdcall;
function PathIsURLW(pszPath: PWideChar): BOOL; stdcall;
function PathMakePrettyA(pszPath: PAnsiChar): BOOL; stdcall;
function PathMakePrettyW(pszPath: PWideChar): BOOL; stdcall;
function PathMakeSystemFolderA(pszPath: PAnsiChar): BOOL; stdcall;
function PathMakeSystemFolderW(pszPath: PWideChar): BOOL; stdcall;
function PathMatchSpecA(pszFile, pszSpec: PAnsiChar): BOOL; stdcall;
function PathMatchSpecW(pszFile, pszSpec: PWideChar): BOOL; stdcall;
function PathParseIconLocationA(pszIconFile: PAnsiChar): Integer; stdcall;
function PathParseIconLocationW(pszIconFile: PWideChar): Integer; stdcall;
procedure PathQuoteSpacesA(lpsz: PAnsiChar); stdcall;
procedure PathQuoteSpacesW(lpsz: PWideChar); stdcall;
function PathRelativePathToA(pszPath: PAnsiChar; pszFrom: PAnsiChar; dwAttrFrom: DWORD;pszTo: PAnsiChar; dwAttrTo: DWORD): BOOL; stdcall;
function PathRelativePathToW(pszPath: PWideChar; pszFrom: PWideChar; dwAttrFrom: DWORD;pszTo: PWideChar; dwAttrTo: DWORD): BOOL; stdcall;
procedure PathRemoveArgsA(pszPath: PAnsiChar); stdcall;
procedure PathRemoveArgsW(pszPath: PWideChar); stdcall;
function PathRemoveBackslashA(pszPath: PAnsiChar): PAnsiChar; stdcall;
function PathRemoveBackslashW(pszPath: PWideChar): PWideChar; stdcall;
procedure PathRemoveBlanksA(pszPath: PAnsiChar); stdcall;
procedure PathRemoveBlanksW(pszPath: PWideChar); stdcall;
procedure PathRemoveExtensionA(pszPath: PAnsiChar); stdcall;
procedure PathRemoveExtensionW(pszPath: PWideChar); stdcall;
function PathRemoveFileSpecA(pszPath: PAnsiChar): BOOL; stdcall;
function PathRemoveFileSpecW(pszPath: PWideChar): BOOL; stdcall;
function PathRenameExtensionA(pszPath: PAnsiChar; pszExt: PAnsiChar): BOOL; stdcall;
function PathRenameExtensionW(pszPath: PWideChar; pszExt: PWideChar): BOOL; stdcall;
function PathSearchAndQualifyA(pszPath: PAnsiChar; pszBuf: PAnsiChar; cchBuf: UINT): BOOL; stdcall;
function PathSearchAndQualifyW(pszPath: PWideChar; pszBuf: PWideChar; cchBuf: UINT): BOOL; stdcall;
procedure PathSetDlgItemPathA(hDlg: HWND; id: Integer; pszPath: PAnsiChar); stdcall;
procedure PathSetDlgItemPathW(hDlg: HWND; id: Integer; pszPath: PWideChar); stdcall;
function PathSkipRootA(pszPath: PAnsiChar): PAnsiChar; stdcall;
function PathSkipRootW(pszPath: PWideChar): PWideChar; stdcall;
procedure PathStripPathA(pszPath: PAnsiChar); stdcall;
procedure PathStripPathW(pszPath: PWideChar); stdcall;
function PathStripToRootA(pszPath: PAnsiChar): BOOL; stdcall;
function PathStripToRootW(pszPath: PWideChar): BOOL; stdcall;
procedure PathUndecorateA(pszPath: PAnsiChar); stdcall;
procedure PathUndecorateW(pszPath: PWideChar); stdcall;
function PathUnExpandEnvStringsA(pszPath: PAnsiChar; pszBuf: PAnsiChar; cchBuf: UINT): BOOL; stdcall;
function PathUnExpandEnvStringsW(pszPath: PWideChar; pszBuf: PWideChar; cchBuf: UINT): BOOL; stdcall;
function PathUnmakeSystemFolderA(pszPath: PAnsiChar): BOOL; stdcall;
function PathUnmakeSystemFolderW(pszPath: PWideChar): BOOL; stdcall;
procedure PathUnquoteSpacesA(lpsz: PAnsiChar); stdcall;
procedure PathUnquoteSpacesW(lpsz: PWideChar); stdcall;
function SHAutoComplete(hwndEdit: HWND; dwFlags: DWORD): HRESULT; stdcall;
function SHCopyKeyA(hkeySrc: HKEY; szSrcSubKey: PAnsiChar; hkeyDest: HKEY;fReserved: DWORD): DWORD; stdcall;
function SHCopyKeyW(hkeySrc: HKEY; szSrcSubKey: PWideChar; hkeyDest: HKEY;fReserved: DWORD): DWORD; stdcall;
function SHCreateShellPalette(hdc: HDC): HPALETTE; stdcall;
function SHCreateStreamOnFileA(pszFile: PAnsiChar; grfMode: DWORD; out ppstm: IStream): HRESULT; stdcall;
function SHCreateStreamOnFileW(pszFile: PWideChar; grfMode: DWORD; out ppstm: IStream): HRESULT; stdcall;
function SHCreateThread(pfnThreadProc: TThreadStartRoutine; pData: Pointer;dwFlags: DWORD; pfnCallback: TThreadStartRoutine): BOOL; stdcall;
function SHDeleteKeyA(hKey: HKEY; pszSubKey: PAnsiChar): DWORD; stdcall;
function SHDeleteKeyW(hKey: HKEY; pszSubKey: PWideChar): DWORD; stdcall;
function SHDeleteValueA(hKey: HKEY; pszSubKey, pszValue: PAnsiChar): DWORD; stdcall;
function SHDeleteValueW(hKey: HKEY; pszSubKey, pszValue: PWideChar): DWORD; stdcall;
function SHEnumKeyExA(hKey: HKEY; dwIndex: DWORD; pszName: PAnsiChar; var pcchName: DWORD): Longint; stdcall;
function SHEnumKeyExW(hKey: HKEY; dwIndex: DWORD; pszName: PWideChar; var pcchName: DWORD): Longint; stdcall;
function SHEnumValueA(hKey: HKEY; dwIndex: DWORD; pszValueName: PAnsiChar;var pcchValueName: DWORD; pdwType: LPDWORD; pvData: Pointer; pcbData: LPDWORD): Longint; stdcall;
function SHEnumValueW(hKey: HKEY; dwIndex: DWORD; pszValueName: PWideChar;var pcchValueName: DWORD; pdwType: LPDWORD; pvData: Pointer; pcbData: LPDWORD): Longint; stdcall;
procedure SHGetThreadRef(out ppunk: IUnknown); stdcall;
function SHGetValueA(hKey: HKEY; pszSubKey, pszValue: PAnsiChar; pdwType: LPDWORD;pvData: Pointer; var pcbData: DWORD): DWORD; stdcall;
function SHGetValueW(hKey: HKEY; pszSubKey, pszValue: PWideChar; pdwType: LPDWORD;pvData: Pointer; var pcbData: DWORD): DWORD; stdcall;
function SHOpenRegStream2A(hkey: HKEY; pszSubkey, pszValue: PAnsiChar; grfMode: DWORD): IStream; stdcall;
function SHOpenRegStream2W(hkey: HKEY; pszSubkey, pszValue: PWideChar; grfMode: DWORD): IStream; stdcall;
function SHOpenRegStreamA(hkey: HKEY; pszSubkey, pszValue: PAnsiChar; grfMode: DWORD): IStream; stdcall;
function SHOpenRegStreamW(hkey: HKEY; pszSubkey, pszValue: PWideChar; grfMode: DWORD): IStream; stdcall;
function SHQueryInfoKeyA(hKey: HKEY; pcSubKeys, pcchMaxSubKeyLen, pcValues,pcchMaxValueNameLen: LPDWORD): Longint; stdcall;
function SHQueryInfoKeyW(hKey: HKEY; pcSubKeys, pcchMaxSubKeyLen, pcValues,pcchMaxValueNameLen: LPDWORD): Longint; stdcall;
function SHQueryValueExA(hKey: HKEY; pszValue: PAnsiChar; pdwReserved, pdwType: LPDWORD;pvData: Pointer; var pcbData: DWORD): DWORD; stdcall;
function SHQueryValueExW(hKey: HKEY; pszValue: PWideChar; pdwReserved, pdwType: LPDWORD;pvData: Pointer; var pcbData: DWORD): DWORD; stdcall;
function SHRegCloseUSKey(hUSKey: HUSKEY): Longint; stdcall;
function SHRegCreateUSKeyA(pszPath: PAnsiChar; samDesired: REGSAM; hRelativeUSKey: HUSKEY;phNewUSKey: PHUSKEY; dwFlags: DWORD): Longint; stdcall;
function SHRegCreateUSKeyW(pszPath: PWideChar; samDesired: REGSAM; hRelativeUSKey: HUSKEY;phNewUSKey: PHUSKEY; dwFlags: DWORD): Longint; stdcall;
function SHRegDeleteEmptyUSKeyA(hUSKey: HUSKEY; pwzSubKey: PAnsiChar; delRegFlags: TSHRegDelFlags): Longint; stdcall;
function SHRegDeleteEmptyUSKeyW(hUSKey: HUSKEY; pwzSubKey: PWideChar; delRegFlags: TSHRegDelFlags): Longint; stdcall;
function SHRegDeleteUSValueA(hUSKey: HUSKEY; pszValue: PAnsiChar; delRegFlags: TSHRegDelFlags): Longint; stdcall;
function SHRegDeleteUSValueW(hUSKey: HUSKEY; pszValue: PWideChar; delRegFlags: TSHRegDelFlags): Longint; stdcall;
function SHRegEnumUSKeyA(hUSKey: HUSKEY; dwIndex: DWORD; pszName: PAnsiChar;pcchName: LPDWORD; enumRegFlags: TSHRegEnumFlags): Longint; stdcall;
function SHRegEnumUSKeyW(hUSKey: HUSKEY; dwIndex: DWORD; pszName: PWideChar;pcchName: LPDWORD; enumRegFlags: TSHRegEnumFlags): Longint; stdcall;
function SHRegEnumUSValueA(hUSKey: HUSKEY; dwIndex: DWORD; pszValueName: PAnsiChar;pcchValueName, pdwType: LPDWORD; pvData: Pointer; pcbData: LPDWORD; enumRegFlags: TSHRegEnumFlags): Longint; stdcall;
function SHRegEnumUSValueW(hUSKey: HUSKEY; dwIndex: DWORD; pszValueName: PWideChar;pcchValueName, pdwType: LPDWORD; pvData: Pointer; pcbData: LPDWORD; enumRegFlags: TSHRegEnumFlags): Longint; stdcall;
function SHRegGetBoolUSValueA(pszSubKey, pszValue: PAnsiChar; fIgnoreHKCU, fDefault: BOOL): BOOL; stdcall;
function SHRegGetBoolUSValueW(pszSubKey, pszValue: PWideChar; fIgnoreHKCU, fDefault: BOOL): BOOL; stdcall;
function SHRegGetIntW(hk: HKEY; pwzKey: LPCWSTR; iDefault: Integer): Integer; stdcall;
function SHRegGetPathA(hKey: HKEY; pcszSubKey, pcszValue: PAnsiChar; pszPath: PAnsiChar;dwFlags: DWORD): DWORD; stdcall;
function SHRegGetPathW(hKey: HKEY; pcszSubKey, pcszValue: PWideChar; pszPath: PWideChar;dwFlags: DWORD): DWORD; stdcall;
function SHRegGetUSValueA(pszSubKey, pszValue: PAnsiChar; pdwType: LPDWORD; pvData: Pointer;var pcbData: DWORD; fIgnoreHKCU: BOOL; pvDefaultData: Pointer; dwDefaultDataSize: DWORD): Longint; stdcall;
function SHRegGetUSValueW(pszSubKey, pszValue: PWideChar; pdwType: LPDWORD; pvData: Pointer;var pcbData: DWORD; fIgnoreHKCU: BOOL; pvDefaultData: Pointer; dwDefaultDataSize: DWORD): Longint; stdcall;
function SHRegOpenUSKeyA(pszPath: PAnsiChar; samDesired: REGSAM; hRelativeUSKey: HUSKEY;phNewUSKey: PHUSKEY; fIgnoreHKCU: BOOL): Longint; stdcall;
function SHRegOpenUSKeyW(pszPath: PWideChar; samDesired: REGSAM; hRelativeUSKey: HUSKEY;phNewUSKey: PHUSKEY; fIgnoreHKCU: BOOL): Longint; stdcall;
function SHRegQueryInfoUSKeyA(hUSKey: HUSKEY; pcSubKeys, pcchMaxSubKeyLen,pcValues, pcchMaxValueNameLen: LPDWORD; enumRegFlags: TSHRegEnumFlags): Longint; stdcall;
function SHRegQueryInfoUSKeyW(hUSKey: HUSKEY; pcSubKeys, pcchMaxSubKeyLen,pcValues, pcchMaxValueNameLen: LPDWORD; enumRegFlags: TSHRegEnumFlags): Longint; stdcall;
function SHRegQueryUSValueA(hUSKey: HUSKEY; pszValue: PAnsiChar; pdwType: LPDWORD;pvData: Pointer; pcbData: LPDWORD; fIgnoreHKCU: BOOL; pvDefaultData: Pointer; dwDefaultDataSize: DWORD): Longint; stdcall;
function SHRegQueryUSValueW(hUSKey: HUSKEY; pszValue: PWideChar; pdwType: LPDWORD;pvData: Pointer; pcbData: LPDWORD; fIgnoreHKCU: BOOL; pvDefaultData: Pointer; dwDefaultDataSize: DWORD): Longint; stdcall;
function SHRegSetPathA(hKey: HKEY; pcszSubKey, pcszValue, pcszPath: PAnsiChar;dwFlags: DWORD): DWORD; stdcall;
function SHRegSetPathW(hKey: HKEY; pcszSubKey, pcszValue, pcszPath: PWideChar;dwFlags: DWORD): DWORD; stdcall;
function SHRegSetUSValueA(pszSubKey, pszValue: PAnsiChar; dwType: DWORD; pvData: Pointer;cbData, dwFlags: DWORD): Longint; stdcall;
function SHRegSetUSValueW(pszSubKey, pszValue: PWideChar; dwType: DWORD; pvData: Pointer;cbData, dwFlags: DWORD): Longint; stdcall;
function SHRegWriteUSValueA(hUSKey: HUSKEY; pszValue: PAnsiChar; dwType: DWORD;pvData: Pointer; cbData, dwFlags: DWORD): Longint; stdcall;
function SHRegWriteUSValueW(hUSKey: HUSKEY; pszValue: PWideChar; dwType: DWORD;pvData: Pointer; cbData, dwFlags: DWORD): Longint; stdcall;
procedure SHSetThreadRef(punk: IUnknown); stdcall;
function SHSetValueA(hKey: HKEY; pszSubKey, pszValue: PAnsiChar; dwType: DWORD;pvData: Pointer; cbData: DWORD): DWORD; stdcall;
function SHSetValueW(hKey: HKEY; pszSubKey, pszValue: PWideChar; dwType: DWORD;pvData: Pointer; cbData: DWORD): DWORD; stdcall;
function SHSkipJunction(pbc: IBindCtx; const pclsid: TCLSID): BOOL; stdcall;
function SHStrDupA(psz: PAnsiChar; out ppwsz: PWideChar): HRESULT; stdcall;
function SHStrDupW(psz: PWideChar; out ppwsz: PWideChar): HRESULT; stdcall;
function StrCatBuffA(pszDest, pszSrc: PAnsiChar; cchDestBuffSize: Integer): PAnsiChar; stdcall;
function StrCatBuffW(pszDest, pszSrc: PWideChar; cchDestBuffSize: Integer): PWideChar; stdcall;
function StrCatW(psz1, psz2: PWideChar): PWideChar; stdcall;
function StrChrA(lpStart: PAnsiChar; wMatch: WORD): PAnsiChar; stdcall;
function StrChrIA(lpStart: PAnsiChar; wMatch: WORD): PAnsiChar; stdcall;
function StrChrIW(lpStart: PWideChar; wMatch: WORD): PWideChar; stdcall;
function StrChrW(lpStart: PWideChar; wMatch: WORD): PWideChar; stdcall;
function StrCmpNA(lpStr1, lpStr2: PAnsiChar; nChar: Integer): Integer; stdcall;
function StrCmpNIA(lpStr1, lpStr2: PAnsiChar; nChar: Integer): Integer; stdcall;
function StrCmpNIW(lpStr1, lpStr2: PWideChar; nChar: Integer): Integer; stdcall;
function StrCmpNW(lpStr1, lpStr2: PWideChar; nChar: Integer): Integer; stdcall;
function StrCmpW(psz1, psz2: PWideChar): Integer; stdcall;
function StrCpyNXA(psz1: PAnsiChar; psz2: PAnsiChar; cchMax: Integer): PAnsiChar; stdcall;
function StrCpyNXW(psz1: PWideChar; psz2: PWideChar; cchMax: Integer): PWideChar; stdcall;
function StrCSpnA(lpStr_, lpSet: PAnsiChar): Integer; stdcall;
function StrCSpnIA(lpStr1, lpSet: PAnsiChar): Integer; stdcall;
function StrCSpnIW(lpStr1, lpSet: PWideChar): Integer; stdcall;
function StrCSpnW(lpStr_, lpSet: PWideChar): Integer; stdcall;
function StrDupA(lpSrch: PAnsiChar): PAnsiChar; stdcall;
function StrDupW(lpSrch: PWideChar): PWideChar; stdcall;
function StrFormatByteSizeA(dw: DWORD; szBuf: PAnsiChar; uiBufSize: UINT): PAnsiChar; stdcall;
function StrFormatByteSizeW(qdw: LONGLONG; szBuf: PWideChar; uiBufSize: UINT): PWideChar; stdcall;
function StrFormatKBSizeA(qdw: LONGLONG; szBuf: PAnsiChar; uiBufSize: UINT): PAnsiChar; stdcall;
function StrFormatKBSizeW(qdw: LONGLONG; szBuf: PWideChar; uiBufSize: UINT): PWideChar; stdcall;
function StrFromTimeIntervalA(pszOut: PAnsiChar; cchMax: UINT; dwTimeMS: DWORD;digits: Integer): Integer; stdcall;
function StrFromTimeIntervalW(pszOut: PWideChar; cchMax: UINT; dwTimeMS: DWORD;digits: Integer): Integer; stdcall;
function StrIsIntlEqualA(fCaseSens: BOOL; lpString1, lpString2: PAnsiChar; nChar: Integer): BOOL; stdcall;
function StrIsIntlEqualW(fCaseSens: BOOL; lpString1, lpString2: PWideChar; nChar: Integer): BOOL; stdcall;
function StrNCatA(psz1: PAnsiChar; psz2: PAnsiChar; cchMax: Integer): PAnsiChar; stdcall;
function StrNCatW(psz1: PWideChar; psz2: PWideChar; cchMax: Integer): PWideChar; stdcall;
function StrPBrkA(psz, pszSet: PAnsiChar): PAnsiChar; stdcall;
function StrPBrkW(psz, pszSet: PWideChar): PWideChar; stdcall;
function StrRChrA(lpStart, lpEnd: PAnsiChar; wMatch: WORD): PAnsiChar; stdcall;
function StrRChrIA(lpStart, lpEnd: PAnsiChar; wMatch: WORD): PAnsiChar; stdcall;
function StrRChrIW(lpStart, lpEnd: PWideChar; wMatch: WORD): PWideChar; stdcall;
function StrRChrW(lpStart, lpEnd: PWideChar; wMatch: WORD): PWideChar; stdcall;
function StrRetToBufA(PAnsiChar: PStrRet; const pidl: PItemIdList; pszBuf: PAnsiChar; cchBuf: UINT): HRESULT; stdcall;
function StrRetToBufW(PWideChar: PStrRet; const pidl: PItemIdList; pszBuf: PWideChar; cchBuf: UINT): HRESULT; stdcall;
function StrRetToStrA(PAnsiChar: PStrRet; const pidl: PItemIdList; out ppsz: PAnsiChar): HRESULT; stdcall;
function StrRetToStrW(PWideChar: PStrRet; const pidl: PItemIdList; out ppsz: PWideChar): HRESULT; stdcall;
function StrRStrIA(lpSource, lpLast, lpSrch: PAnsiChar): PAnsiChar; stdcall;
function StrRStrIW(lpSource, lpLast, lpSrch: PWideChar): PWideChar; stdcall;
function StrSpnA(psz, pszSet: PAnsiChar): Integer; stdcall;
function StrSpnW(psz, pszSet: PWideChar): Integer; stdcall;
function StrStrA(lpFirst, lpSrch: PAnsiChar): PAnsiChar; stdcall;
function StrStrIA(lpFirst, lpSrch: PAnsiChar): PAnsiChar; stdcall;
function StrStrIW(lpFirst, lpSrch: PWideChar): PWideChar; stdcall;
function StrStrW(lpFirst, lpSrch: PWideChar): PWideChar; stdcall;
function StrToIntA(lpSrch: PAnsiChar): Integer; stdcall;
function StrToIntExA(pszString: PAnsiChar; dwFlags: DWORD; var piRet: Integer): BOOL; stdcall;
function StrToIntExW(pszString: PWideChar; dwFlags: DWORD; var piRet: Integer): BOOL; stdcall;
function StrToIntW(lpSrch: PWideChar): Integer; stdcall;
function StrTrimA(psz: PAnsiChar; pszTrimChars: PAnsiChar): BOOL; stdcall;
function StrTrimW(psz: PWideChar; pszTrimChars: PWideChar): BOOL; stdcall;
function UrlApplySchemeA(pszIn: PAnsiChar; pszOut: PAnsiChar; pcchOut: LPDWORD;dwFlags: DWORD): HRESULT; stdcall;
function UrlApplySchemeW(pszIn: PWideChar; pszOut: PWideChar; pcchOut: LPDWORD;dwFlags: DWORD): HRESULT; stdcall;
function UrlCanonicalizeA(pszUrl: PAnsiChar; pszCanonicalized: PAnsiChar;pcchCanonicalized: LPDWORD; dwFlags: DWORD): HRESULT; stdcall;
function UrlCanonicalizeW(pszUrl: PWideChar; pszCanonicalized: PWideChar;pcchCanonicalized: LPDWORD; dwFlags: DWORD): HRESULT; stdcall;
function UrlCombineA(pszBase, pszRelative: PAnsiChar; pszCombined: PAnsiChar;out pcchCombined: DWORD; dwFlags: DWORD): HRESULT; stdcall;
function UrlCombineW(pszBase, pszRelative: PWideChar; pszCombined: PWideChar;out pcchCombined: DWORD; dwFlags: DWORD): HRESULT; stdcall;
function UrlCompareA(psz1, psz2: PAnsiChar; fIgnoreSlash: BOOL): Integer; stdcall;
function UrlCompareW(psz1, psz2: PWideChar; fIgnoreSlash: BOOL): Integer; stdcall;
function UrlCreateFromPathA(pszPath: PAnsiChar; pszUrl: PAnsiChar; pcchUrl: LPDWORD;dwFlags: DWORD): HRESULT; stdcall;
function UrlCreateFromPathW(pszPath: PWideChar; pszUrl: PWideChar; pcchUrl: LPDWORD;dwFlags: DWORD): HRESULT; stdcall;
function UrlEscapeA(pszUrl: PAnsiChar; pszEscaped: PAnsiChar; pcchEscaped: LPDWORD;dwFlags: DWORD): HRESULT; stdcall;
function UrlEscapeW(pszUrl: PWideChar; pszEscaped: PWideChar; pcchEscaped: LPDWORD;dwFlags: DWORD): HRESULT; stdcall;
function UrlGetLocationA(psz1: PAnsiChar): PAnsiChar; stdcall;
function UrlGetLocationW(psz1: PWideChar): PWideChar; stdcall;
function UrlGetPartA(pszIn: PAnsiChar; pszOut: PAnsiChar; pcchOut: LPDWORD; dwPart,dwFlags: DWORD): HRESULT; stdcall;
function UrlGetPartW(pszIn: PWideChar; pszOut: PWideChar; pcchOut: LPDWORD; dwPart,dwFlags: DWORD): HRESULT; stdcall;
function UrlHashA(pszUrl: PAnsiChar; pbHash: PBYTE; cbHash: DWORD): HRESULT; stdcall;
function UrlHashW(pszUrl: PWideChar; pbHash: PBYTE; cbHash: DWORD): HRESULT; stdcall;
function UrlIsA(pszUrl: PAnsiChar; UrlIs: TUrlIs): BOOL; stdcall;
function UrlIsNoHistoryA(pszURL: PAnsiChar): BOOL; stdcall;
function UrlIsNoHistoryW(pszURL: PWideChar): BOOL; stdcall;
function UrlIsOpaqueA(pszURL: PAnsiChar): BOOL; stdcall;
function UrlIsOpaqueW(pszURL: PWideChar): BOOL; stdcall;
function UrlIsW(pszUrl: PWideChar; UrlIs: TUrlIs): BOOL; stdcall;
function UrlUnescapeA(pszUrl, pszUnescaped: PAnsiChar; pcchUnescaped: LPDWORD;dwFlags: DWORD): HRESULT; stdcall;
function UrlUnescapeW(pszUrl, pszUnescaped: PWideChar; pcchUnescaped: LPDWORD;dwFlags: DWORD): HRESULT; stdcall;

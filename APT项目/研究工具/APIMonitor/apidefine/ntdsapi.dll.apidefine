function DsAddSidHistoryA(hDS: HANDLE; Flags: DWORD; SrcDomain: LPCSTR;SrcPrincipal: LPCSTR; SrcDomainController: LPCSTR;SrcDomainCreds: RPC_AUTH_IDENTITY_HANDLE; DstDomain: LPCSTR;DstPrincipal: LPCSTR): DWORD; stdcall;
function DsAddSidHistoryW(hDS: HANDLE; Flags: DWORD; SrcDomain: LPCWSTR;SrcPrincipal: LPCWSTR; SrcDomainController: LPCWSTR;SrcDomainCreds: RPC_AUTH_IDENTITY_HANDLE; DstDomain: LPCWSTR;DstPrincipal: LPCWSTR): DWORD; stdcall;
function DsBindA(DomainControllerName: LPCSTR; DnsDomainName: LPCSTR;var phDS: HANDLE): DWORD; stdcall;
function DsBindingSetTimeout(hDS: HANDLE; cTimeoutSecs: ULONG): DWORD; stdcall;
function DsBindToISTGA(SiteName: LPCSTR; phDS: LPHANDLE): DWORD; stdcall;
function DsBindToISTGW(SiteName: LPCWSTR; phDS: LPHANDLE): DWORD; stdcall;
function DsBindW(DomainControllerName: LPCWSTR; DnsDomainName: LPCWSTR;var phDS: HANDLE): DWORD; stdcall;
function DsBindWithCredA(DomainControllerName: LPCSTR; DnsDomainName: LPCSTR;AuthIdentity: RPC_AUTH_IDENTITY_HANDLE; var phDS: HANDLE): DWORD; stdcall;
function DsBindWithCredW(DomainControllerName: LPCWSTR; DnsDomainName: LPCWSTR;AuthIdentity: RPC_AUTH_IDENTITY_HANDLE; var phDS: HANDLE): DWORD; stdcall;
function DsBindWithSpnA(DomainControllerName: LPCSTR; DnsDomainName: LPCSTR;AuthIdentity: RPC_AUTH_IDENTITY_HANDLE; ServicePrincipalName: LPCSTR;var phDS: HANDLE): DWORD; stdcall;
function DsBindWithSpnExA(DomainControllerName, DnsDomainName: LPCSTR; AuthIdentity: RPC_AUTH_IDENTITY_HANDLE;ServicePrincipalName: LPCSTR; BindFlags: DWORD; phDS: LPHANDLE): DWORD; stdcall;
function DsBindWithSpnExW(DomainControllerName, DnsDomainName: LPCWSTR; AuthIdentity: RPC_AUTH_IDENTITY_HANDLE;ServicePrincipalName: LPCWSTR; BindFlags: DWORD; phDS: LPHANDLE): DWORD; stdcall;
function DsBindWithSpnW(DomainControllerName: LPCWSTR; DnsDomainName: LPCWSTR;AuthIdentity: RPC_AUTH_IDENTITY_HANDLE; ServicePrincipalName: LPCWSTR;var phDS: HANDLE): DWORD; stdcall;
function DsClientMakeSpnForTargetServerA(ServiceClass: LPCSTR; ServiceName: LPCSTR;var pcSpnLength: DWORD; pszSpn: LPSTR): DWORD; stdcall;
function DsClientMakeSpnForTargetServerW(ServiceClass: LPCWSTR; ServiceName: LPCWSTR;var pcSpnLength: DWORD; pszSpn: LPWSTR): DWORD; stdcall;
function DsCrackNamesA(hDS: HANDLE; flags: DS_NAME_FLAGS;formatOffered: DS_NAME_FORMAT; formatDesired: DS_NAME_FORMAT; cNames: DWORD;rpNames: LPCSTR; var ppResult: PDS_NAME_RESULTA): DWORD; stdcall;
function DsCrackNamesW(hDS: HANDLE; flags: DS_NAME_FLAGS;formatOffered: DS_NAME_FORMAT; formatDesired: DS_NAME_FORMAT; cNames: DWORD;rpNames: LPCWSTR; var ppResult: PDS_NAME_RESULTW): DWORD; stdcall;
function DsCrackSpnA(pszSpn: LPCSTR; pcServiceClass: LPDWORD; ServiceClass: LPSTR;pcServiceName: LPDWORD; ServiceName: LPSTR; pcInstanceName: LPDWORD;InstanceName: LPSTR; pInstancePort: PUSHORT): DWORD; stdcall;
function DsCrackSpnW(pszSpn: LPCWSTR; pcServiceClass: LPDWORD; ServiceClass: LPWSTR;pcServiceName: LPDWORD; ServiceName: LPWSTR; pcInstanceName: LPDWORD;InstanceName: LPWSTR; pInstancePort: PUSHORT): DWORD; stdcall;
function DsCrackUnquotedMangledRdnA(pszRDN: LPCSTR; cchRDN: DWORD; pGuid: LPGUID; peDsMangleFor: PDsMangleFor): BOOL; stdcall;
function DsCrackUnquotedMangledRdnW(pszRDN: LPCWSTR; cchRDN: DWORD; pGuid: LPGUID; peDsMangleFor: PDsMangleFor): BOOL; stdcall;
procedure DsFreeDomainControllerInfoA(InfoLevel: DWORD; cInfo: DWORD;pInfo: PVOID); stdcall;
procedure DsFreeDomainControllerInfoW(InfoLevel: DWORD; cInfo: DWORD;pInfo: PVOID); stdcall;
procedure DsFreeNameResultA(pResult: PDS_NAME_RESULTA); stdcall;
procedure DsFreeNameResultW(pResult: PDS_NAME_RESULTW); stdcall;
procedure DsFreePasswordCredentials(AuthIdentity: RPC_AUTH_IDENTITY_HANDLE); stdcall;
procedure DsFreeSchemaGuidMapA(pGuidMap: PDS_SCHEMA_GUID_MAPA); stdcall;
procedure DsFreeSchemaGuidMapW(pGuidMap: PDS_SCHEMA_GUID_MAPW); stdcall;
procedure DsFreeSpnArrayA(cSpn: DWORD; rpszSpn: LPSTR); stdcall;
procedure DsFreeSpnArrayW(cSpn: DWORD; rpszSpn: LPWSTR); stdcall;
function DsGetDomainControllerInfoA(hDs: HANDLE; DomainName: LPCSTR;InfoLevel: DWORD; var pcOut: DWORD; ppInfo: PPVOID): DWORD; stdcall;
function DsGetDomainControllerInfoW(hDs: HANDLE; DomainName: LPCWSTR;InfoLevel: DWORD; var pcOut: DWORD; ppInfo: PPVOID): DWORD; stdcall;
function DsGetRdnW(var ppDN: LPCWCH; var pcDN: DWORD; var ppKey: LPCWCH; var pcKey: DWORD; var ppVal: LPCWCH; var pcVal: DWORD): DWORD; stdcall;
function DsGetSpnA(ServiceType: DS_SPN_NAME_TYPE; ServiceClass: LPCSTR;ServiceName: LPCSTR; InstancePort: USHORT; cInstanceNames: USHORT;pInstanceNames: LPCSTR; pInstancePorts: PUSHORT; var pcSpn: DWORD;var prpszSpn: LPSTR): DWORD; stdcall;
function DsGetSpnW(ServiceType: DS_SPN_NAME_TYPE; ServiceClass: LPCWSTR;ServiceName: LPCWSTR; InstancePort: USHORT; cInstanceNames: USHORT;pInstanceNames: LPCWSTR; pInstancePorts: PUSHORT; var pcSpn: DWORD;var prpszSpn: LPWSTR): DWORD; stdcall;
function DsInheritSecurityIdentityA(hDS: HANDLE; Flags: DWORD;SrcPrincipal: LPCSTR; DstPrincipal: LPCSTR): DWORD; stdcall;
function DsInheritSecurityIdentityW(hDS: HANDLE; Flags: DWORD;SrcPrincipal: LPCWSTR; DstPrincipal: LPCWSTR): DWORD; stdcall;
function DsIsMangledDnA(pszDn: LPCSTR; eDsMangleFor: DS_MANGLE_FOR): BOOL; stdcall;
function DsIsMangledDnW(pszDn: LPCWSTR; eDsMangleFor: DS_MANGLE_FOR): BOOL; stdcall;
function DsIsMangledRdnValueA(pszRdn: LPCSTR; cRdn: DWORD; eDsMangleForDesired: DS_MANGLE_FOR): BOOL; stdcall;
function DsIsMangledRdnValueW(pszRdn: LPCWSTR; cRdn: DWORD; eDsMangleForDesired: DS_MANGLE_FOR): BOOL; stdcall;
function DsListDomainsInSiteA(hDs: HANDLE; site: LPCSTR;var ppDomains: PDS_NAME_RESULTA): DWORD; stdcall;
function DsListDomainsInSiteW(hDs: HANDLE; site: LPCWSTR;var ppDomains: PDS_NAME_RESULTW): DWORD; stdcall;
function DsListInfoForServerA(hDs: HANDLE; server: LPCSTR;var ppInfo: PDS_NAME_RESULTA): DWORD; stdcall;
function DsListInfoForServerW(hDs: HANDLE; server: LPCWSTR;var ppInfo: PDS_NAME_RESULTW): DWORD; stdcall;
function DsListRolesA(hDs: HANDLE; var ppRoles: PDS_NAME_RESULTA): DWORD; stdcall;
function DsListRolesW(hDs: HANDLE; var ppRoles: PDS_NAME_RESULTW): DWORD; stdcall;
function DsListServersForDomainInSiteA(hDs: HANDLE; domain: LPCSTR; site: LPCSTR;var ppServers: PDS_NAME_RESULTA): DWORD; stdcall;
function DsListServersForDomainInSiteW(hDs: HANDLE; domain: LPCWSTR; site: LPCWSTR;var ppServers: PDS_NAME_RESULTW): DWORD; stdcall;
function DsListServersInSiteA(hDs: HANDLE; site: LPCSTR;var ppServers: PDS_NAME_RESULTA): DWORD; stdcall;
function DsListServersInSiteW(hDs: HANDLE; site: LPCWSTR;var ppServers: PDS_NAME_RESULTW): DWORD; stdcall;
function DsListSitesA(hDs: HANDLE; var ppSites: PDS_NAME_RESULTA): DWORD; stdcall;
function DsListSitesW(hDs: HANDLE; var ppSites: PDS_NAME_RESULTW): DWORD; stdcall;
function DsMakePasswordCredentialsA(User: LPCSTR; Domain: LPCSTR;Password: LPCSTR; var pAuthIdentity: RPC_AUTH_IDENTITY_HANDLE): DWORD; stdcall;
function DsMakePasswordCredentialsW(User: LPCWSTR; Domain: LPCWSTR;Password: LPCWSTR; var pAuthIdentity: RPC_AUTH_IDENTITY_HANDLE): DWORD; stdcall;
function DsMakeSpnA(ServiceClass: LPCSTR; ServiceName: LPCSTR;InstanceName: LPCSTR; InstancePort: USHORT; Referrer: LPCSTR;var pcSpnLength: DWORD; pszSpn: LPSTR): DWORD; stdcall;
function DsMakeSpnW(ServiceClass: LPCWSTR; ServiceName: LPCWSTR;InstanceName: LPCWSTR; InstancePort: USHORT; Referrer: LPCWSTR;var pcSpnLength: DWORD; pszSpn: LPWSTR): DWORD; stdcall;
function DsMapSchemaGuidsA(hDs: HANDLE; cGuids: DWORD; rGuids: PGUID;var ppGuidMap: PDS_SCHEMA_GUID_MAPA): DWORD; stdcall;
function DsMapSchemaGuidsW(hDs: HANDLE; cGuids: DWORD; rGuids: PGUID;var ppGuidMap: PDS_SCHEMA_GUID_MAPW): DWORD; stdcall;
function DsQuerySitesByCostA(hDS: HANDLE; pwszFromSite: LPSTR; out rgwszToSites: LPSTR; cToSites, dwFlags: DWORD;out prgSiteInfo: PDS_SITE_COST_INFO): DWORD; stdcall;
function DsQuerySitesByCostW(hDS: HANDLE; pwszFromSite: LPWSTR; out rgwszToSites: LPWSTR; cToSites, dwFlags: DWORD;out prgSiteInfo: PDS_SITE_COST_INFO): DWORD; stdcall;
procedure DsQuerySitesFree(rgSiteInfo: PDS_SITE_COST_INFO); stdcall;
function DsQuoteRdnValueA(cUnquotedRdnValueLength: DWORD;psUnquotedRdnValue: LPCCH; var pcQuotedRdnValueLength: DWORD;psQuotedRdnValue: LPCH): DWORD; stdcall;
function DsQuoteRdnValueW(cUnquotedRdnValueLength: DWORD;psUnquotedRdnValue: LPCWCH; var pcQuotedRdnValueLength: DWORD;psQuotedRdnValue: LPWCH): DWORD; stdcall;
function DsRemoveDsDomainA(hDs: HANDLE; DomainDN: LPSTR): DWORD; stdcall;
function DsRemoveDsDomainW(hDs: HANDLE; DomainDN: LPWSTR): DWORD; stdcall;
function DsRemoveDsServerA(hDs: HANDLE; ServerDN: LPSTR; DomainDN: LPSTR;fLastDcInDomain: PBOOL; fCommit: BOOL): DWORD; stdcall;
function DsRemoveDsServerW(hDs: HANDLE; ServerDN: LPWSTR; DomainDN: LPWSTR;fLastDcInDomain: PBOOL; fCommit: BOOL): DWORD; stdcall;
function DsReplicaAddA(hDS: HANDLE; NameContext: LPCSTR; SourceDsaDn: LPCSTR;TransportDn: LPCSTR; SourceDsaAddress: LPCSTR; pSchedule: PSCHEDULE;Options: DWORD): DWORD; stdcall;
function DsReplicaAddW(hDS: HANDLE; NameContext: LPCWSTR; SourceDsaDn: LPCWSTR;TransportDn: LPCWSTR; SourceDsaAddress: LPCWSTR; pSchedule: PSCHEDULE;Options: DWORD): DWORD; stdcall;
function DsReplicaConsistencyCheck(hDS: HANDLE; TaskID: DS_KCC_TASKID;dwFlags: DWORD): DWORD; stdcall;
function DsReplicaDelA(hDS: HANDLE; NameContext: LPCSTR; DsaSrc: LPCSTR;Options: ULONG): DWORD; stdcall;
function DsReplicaDelW(hDS: HANDLE; NameContext: LPCWSTR; DsaSrc: LPCWSTR;Options: ULONG): DWORD; stdcall;
procedure DsReplicaFreeInfo(InfoType: DS_REPL_INFO_TYPE; pInfo: PVOID); stdcall;
function DsReplicaGetInfo2W(hDS: HANDLE; InfoType: DS_REPL_INFO_TYPE; pszObject: LPCWSTR; const puuidForSourceDsaObjGuid: UUID; pszAttributeName,pszValue: LPCWSTR; dwFlags, dwEnumerationContext: DWORD; var ppInfo: LPVOID): DWORD; stdcall;
function DsReplicaGetInfoW(hDS: HANDLE; InfoType: DS_REPL_INFO_TYPE;pszObject: LPCWSTR; puuidForSourceDsaObjGuid: LPUUID; ppInfo: PPVOID): DWORD; stdcall;
function DsReplicaModifyA(hDS: HANDLE; NameContext: LPCSTR; pUuidSourceDsa: LPUUID;TransportDn: LPCSTR; SourceDsaAddress: LPCSTR; pSchedule: PSCHEDULE;ReplicaFlags: DWORD; ModifyFields: DWORD; Options: DWORD): DWORD; stdcall;
function DsReplicaModifyW(hDS: HANDLE; NameContext: LPCWSTR; pUuidSourceDsa: LPUUID;TransportDn: LPCWSTR; SourceDsaAddress: LPCWSTR; pSchedule: PSCHEDULE;ReplicaFlags: DWORD; ModifyFields: DWORD; Options: DWORD): DWORD; stdcall;
function DsReplicaSyncA(hDS: HANDLE; NameContext: LPCSTR; pUuidDsaSrc: LPUUID;Options: ULONG): DWORD; stdcall;
function DsReplicaSyncAllA(hDS: HANDLE; pszNameContext: LPCSTR; ulFlags: ULONG;pfnCallBack: TSynchUpdateProcA; pCallbackData: LPVOID;pErrors: PPDS_REPSYNCALL_ERRINFOA): DWORD; stdcall;
function DsReplicaSyncAllW(hDS: HANDLE; pszNameContext: LPCWSTR; ulFlags: ULONG;pfnCallBackW: TSynchUpdateProcW; pCallbackData: LPVOID;pErrors: PPDS_REPSYNCALL_ERRINFOW): DWORD; stdcall;
function DsReplicaSyncW(hDS: HANDLE; NameContext: LPCWSTR; pUuidDsaSrc: LPUUID;Options: ULONG): DWORD; stdcall;
function DsReplicaUpdateRefsA(hDS: HANDLE; NameContext: LPCSTR; DsaDest: LPCSTR;pUuidDsaDest: LPUUID; Options: ULONG): DWORD; stdcall;
function DsReplicaUpdateRefsW(hDS: HANDLE; NameContext: LPCWSTR; DsaDest: LPCWSTR;pUuidDsaDest: LPUUID; Options: ULONG): DWORD; stdcall;
function DsReplicaVerifyObjectsA(hDS: HANDLE; NameContext: LPCSTR; const pUuidDsaSrc: UUID; ulOptions: ULONG): DWORD; stdcall;
function DsReplicaVerifyObjectsW(hDS: HANDLE; NameContext: LPCWSTR; const pUuidDsaSrc: UUID; ulOptions: ULONG): DWORD; stdcall;
function DsServerRegisterSpnA(Operation: DS_SPN_WRITE_OP; ServiceClass: LPCSTR;UserObjectDN: LPCSTR): DWORD; stdcall;
function DsServerRegisterSpnW(Operation: DS_SPN_WRITE_OP; ServiceClass: LPCWSTR;UserObjectDN: LPCWSTR): DWORD; stdcall;
function DsUnBindA(var phDS: HANDLE): DWORD; stdcall;
function DsUnBindW(var phDS: HANDLE): DWORD; stdcall;
function DsUnquoteRdnValueA(cQuotedRdnValueLength: DWORD; psQuotedRdnValue: LPCCH;var pcUnquotedRdnValueLength: DWORD; psUnquotedRdnValue: LPCH): DWORD; stdcall;
function DsUnquoteRdnValueW(cQuotedRdnValueLength: DWORD; psQuotedRdnValue: LPCWCH;var pcUnquotedRdnValueLength: DWORD; psUnquotedRdnValue: LPWCH): DWORD; stdcall;
function DsWriteAccountSpnA(hDS: HANDLE; Operation: DS_SPN_WRITE_OP;pszAccount: LPCSTR; cSpn: DWORD; rpszSpn: LPCSTR): DWORD; stdcall;
function DsWriteAccountSpnW(hDS: HANDLE; Operation: DS_SPN_WRITE_OP;pszAccount: LPCWSTR; cSpn: DWORD; rpszSpn: LPCWSTR): DWORD; stdcall;

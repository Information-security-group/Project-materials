function CreateEnvironmentBlock(lpEnvironment: LPLPVOID; hToken: HANDLE;bInherit: BOOL): BOOL; stdcall;
function DeleteProfileA(lpSidString: LPCSTR; lpProfilePath: LPCSTR;lpComputerName: LPCSTR): BOOL; stdcall;
function DeleteProfileW(lpSidString: LPCWSTR; lpProfilePath: LPCWSTR;lpComputerName: LPCWSTR): BOOL; stdcall;
function DestroyEnvironmentBlock(lpEnvironment: LPVOID): BOOL; stdcall;
function EnterCriticalPolicySection(bMachine: BOOL): HANDLE; stdcall;
function ExpandEnvironmentStringsForUserA(hToken: HANDLE; lpSrc: LPCSTR;lpDest: LPSTR; dwSize: DWORD): BOOL; stdcall;
function ExpandEnvironmentStringsForUserW(hToken: HANDLE; lpSrc: LPCWSTR;lpDest: LPWSTR; dwSize: DWORD): BOOL; stdcall;
function FreeGPOListA(pGPOList: PGROUP_POLICY_OBJECTA): BOOL; stdcall;
function FreeGPOListW(pGPOList: PGROUP_POLICY_OBJECTW): BOOL; stdcall;
function GetAllUsersProfileDirectoryA(lpProfileDir: LPSTR; var lpcchSize: DWORD): BOOL; stdcall;
function GetAllUsersProfileDirectoryW(lpProfileDir: LPWSTR; var lpcchSize: DWORD): BOOL; stdcall;
function GetAppliedGPOListA(dwFlags: DWORD; pMachineName: LPCSTR; pSidUser: PSID;pGuidExtension: LPGUID; ppGPOList: PPGROUP_POLICY_OBJECTA): DWORD; stdcall;
function GetAppliedGPOListW(dwFlags: DWORD; pMachineName: LPCWSTR; pSidUser: PSID;pGuidExtension: LPGUID; ppGPOList: PPGROUP_POLICY_OBJECTW): DWORD; stdcall;
function GetDefaultUserProfileDirectoryA(lpProfileDir: LPSTR; var lpcchSize: DWORD): BOOL; stdcall;
function GetDefaultUserProfileDirectoryW(lpProfileDir: LPWSTR; var lpcchSize: DWORD): BOOL; stdcall;
function GetGPOListA(hToken: HANDLE; lpName: LPCSTR; lpHostName: LPCSTR;lpComputerName: LPCSTR; dwFlags: DWORD; pGPOList: PPGROUP_POLICY_OBJECTA): BOOL; stdcall;
function GetGPOListW(hToken: HANDLE; lpName: LPCWSTR; lpHostName: LPCWSTR;lpComputerName: LPCWSTR; dwFlags: DWORD; pGPOList: PPGROUP_POLICY_OBJECTW): BOOL; stdcall;
function GetProfilesDirectoryA(lpProfilesDir: LPSTR; var lpcchSize: DWORD): BOOL; stdcall;
function GetProfilesDirectoryW(lpProfilesDir: LPWSTR; var lpcchSize: DWORD): BOOL; stdcall;
function GetProfileType(var dwFlags: DWORD): BOOL; stdcall;
function GetUserProfileDirectoryA(hToken: HANDLE; lpProfileDir: LPSTR;var lpcchSize: DWORD): BOOL; stdcall;
function GetUserProfileDirectoryW(hToken: HANDLE; lpProfileDir: LPWSTR;var lpcchSize: DWORD): BOOL; stdcall;
function LeaveCriticalPolicySection(hSection: HANDLE): BOOL; stdcall;
function LoadUserProfileA(hToken: HANDLE; var lpProfileInfo: PROFILEINFOA): BOOL; stdcall;
function LoadUserProfileW(hToken: HANDLE; var lpProfileInfo: PROFILEINFOW): BOOL; stdcall;
function ProcessGroupPolicyCompleted(extensionId: REFGPEXTENSIONID;pAsyncHandle: ASYNCCOMPLETIONHANDLE; dwStatus: DWORD): DWORD; stdcall;
function ProcessGroupPolicyCompletedEx(extensionId: REFGPEXTENSIONID; pAsyncHandle: ASYNCCOMPLETIONHANDLE;dwStatus: DWORD; RsopStatus: HRESULT): DWORD; stdcall;
function RefreshPolicy(bMachine: BOOL): BOOL; stdcall;
function RefreshPolicyEx(bMachine: BOOL; dwOptions: DWORD): BOOL; stdcall;
function RegisterGPNotification(hEvent: HANDLE; bMachine: BOOL): BOOL; stdcall;
function RsopAccessCheckByType(pSecurityDescriptor: PSECURITY_DESCRIPTOR; pPrincipalSelfSid: PSID;pRsopToken: PRSOPTOKEN; dwDesiredAccessMask: DWORD; pObjectTypeList: POBJECT_TYPE_LIST;ObjectTypeListLength: DWORD; pGenericMapping: PGENERIC_MAPPING; pPrivilegeSet: PPRIVILEGE_SET;pdwPrivilegeSetLength: LPDWORD; pdwGrantedAccessMask: LPDWORD; pbAccessStatus: LPBOOL): HRESULT; stdcall;
function RsopFileAccessCheck(pszFileName: LPWSTR; pRsopToken: PRSOPTOKEN; dwDesiredAccessMask: DWORD;pdwGrantedAccessMask: LPDWORD; pbAccessStatus: LPBOOL): HRESULT; stdcall;
function RsopResetPolicySettingStatus(dwFlags: DWORD; pServices: IWbemServices;pSettingInstance: IWbemClassObject): HRESULT; stdcall;
function RsopSetPolicySettingStatus(dwFlags: DWORD; pServices: IWbemServices;pSettingInstance: IWbemClassObject; nInfo: DWORD;pStatus: LPPOLICYSETTINGSTATUSINFO): HRESULT; stdcall;
function UnloadUserProfile(hToken: HANDLE; hProfile: HANDLE): BOOL; stdcall;
function UnregisterGPNotification(hEvent: HANDLE): BOOL; stdcall;
